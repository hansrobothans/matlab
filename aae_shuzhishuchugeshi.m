clc  ,clear ,close all 
%数值的输出格式

%1、数据类型默认为双精度的浮点数
% double -2^128，-2^126;2^-126,2^128
% single -2^1024,-2^1022;2^-1022,2^1024
% int8   -2^7,2^7-1
% int16  -2^15,2^15-1
% int32  -2^31,2^31-1
% int64  -2^63,2^63-1
% uint8  0,2^8-1
% uint16 0,2^16-1
% uint32 0,2^32-1
% uint64 0,2^64-1

%2、matlab的数值精度
%matlab7以上的版本，matlab的数据精度为2^-1074,任何绝对值小于2^-1074的实数都被视为0
% format long
% x1 = 2^-3
% x2 = 2^30
%补充说明
%1.format函数：控制输出、显示格式
%2.用法说明
% format 缺省格式，同short。Matlab中常用的显示格式有：
% （1）format short表示5位近似定点数
% （2）format long 15位近似定点数
% （3）format hex 十六进制表示
% （4）format bank 银行格式，固定元和分
% （5）format rat 最小证书比例（分数）表示

%3、matlab显示精度
%默认状态，整型以整型显示，实数保留小数点后四位
%format不改变原来数据，只影响显示，此外还可以使用digits和vpa控制显示精度
% pi
% format long
% pi
% format short
% pi
% format rat
% pi
% digits(10);
% vpa(pi)
% vpa(pi,15)

%补充说明
% format这个函数是用来控制显示精度而不是用于控制运算精度的
% atlab控制运算精度用的是digits和vpa这两个函数。
% digits用于规定运算精度，比如：
% digits(20);
% 这个语句就规定了运算精度是20位有效数字。但并不是规定了就可以使用，因为实际编程中，我们可能有些运算需要控制精度，而有些不需要控制。
% vpa就用于解决这个问题，凡是用需要控制精度的，我们都对运算表达式使用vpa函数。例如：
% digits(5);
% a=vpa(sqrt(2));
% 这样a的值就是1.4142，而不是准确的1.4142135623730950488016887242097......
% 又如：
% digits(5);
% a=vpa(sqrt(2));
% b=sqrt(2);
% 这样a的值是1.4142，b没有用vpa函数，所以b是1.4142135623730950488016887242097......
% vpa函数对其中每一个运算都控制精度，并非只控制结果。
% 
% digits(11);
% a=vpa(2/3+4/7+5/9);
% b=2/3+4/7+5/9;
% a的结果为1.7936507936，b的结果为1.793650793650794......
% 也就是说，计算a的值的时候，先对2/3，4 /7，5/9这三个运算都控制了精度，又对三个数相加的运算控制了精度。
% 而b的值是真实值，对它取11位有效数字的话，结果为1.7936507937，
% 与a不同，就是说vpa并不是先把表达式的值用matlab本身的精度求出来，再取有效数字，而是每运算一次，都控制精度。
% vpa对它括起来的运算每一次都控制精度，

% 但有一点需要注意，vpa对函数的参数不起作用。
% 举一个例子：
% digits(5);
% a=vpa(sqrt(2/3));
% b=vpa(sqrt(vpa(2/3)));
% 结果a为0.81649，b为.81650。sqrt是一个函数，2/3是参数，
% 也就是说，a式中，vpa对2/3是不起作用的，只对sqrt函数的返回值作用。
% 如果想达到2/3的精度也要控制的效果，就要用b式，对参数也使用vpa函数。
% 还有一点，digits这个函数不是必需的，vpa可以这样用：
% vpa(表达式,运算精度);
% 举例来说：
% vpa(pi,5);
% 和
% digits(5);
% vpa(pi);
% 结果是一样的，vpa不指定运算精度，就用digits函数指定的。如果也没有用digits函数，那就是按matlab本身的精度来运算。

% 4、字符型数据
% 字符串可以用单引号进行赋值，字符串的每个字符（含空格）都是字符数组的一个元素
% 字符串操作函数
%char %生成字符数组
%strcat %水平连接字符串
%strvcat %垂直连接字符串
%strcmp %比较字符串
%strncmp %比较字符串前n个字符
%strfind %在其它字符串中寻找此字符串
%strrep %以其他字符串代替此字符串
%strsplit %在指定的分隔符处拆分字符串
%strtok %寻找字符串中的记号
%upper %转换字符串为大写
%lower %转换字符串为小写
%blanks %生成空字符串
%deblank %移去字符串内的空格

% syms a b
% y = a
% 字符串的相减运算
% y1 = a + 1
% y2 = y1 - 2
% 字符串相加运算
% y3 = y + y1
% 字符串相乘运算
% y4 = y*y1
% 字符串相除运算
% y5 = y/y1

%5、数据类型之间的转换
%int2str %整数->字符串
% mat2str %矩阵->字符串
% num2str %数字->字符串
% str2num %字符串->数字
% base2dec %B底字符串->十进制数
% bin2dec %二进制数->十进制数
% dec2base %十进制数->B底字符串
% dec2bin %十进制数->二进制数
% dec2hex %十进制数->十六进制数
% hex2dec %十六进制数->十进制数
% hex2num %十六进制数->双精度浮点数
% num2hex %浮点数->十六进制数
% cell2mat %元胞数组->数值数组
% cell2struct %元胞数组->结构体数组
% mat2cell %数值数组->元胞数组
% struct2cell %结构体数组->元胞数组
% a = 'pi'
% b = double(a)
% b1 = str2num(a)
% c = 11*a
% d = 11*b
% e = 11*b1



